<?php

namespace Proxies\__CG__\OGIS\IndexBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \OGIS\IndexBundle\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'displayname', 'messageboard', 'layers', 'compositions', 'styles', 'projects', 'palettes', '' . "\0" . 'OGIS\\IndexBundle\\Entity\\User' . "\0" . 'catalogs', 'messagesSent', 'messagesReceived', '' . "\0" . 'OGIS\\IndexBundle\\Entity\\User' . "\0" . 'limits', 'username', 'usernameCanonical', 'email', 'emailCanonical', 'enabled', 'salt', 'password', 'plainPassword', 'lastLogin', 'confirmationToken', 'passwordRequestedAt', 'groups', 'locked', 'expired', 'expiresAt', 'roles', 'credentialsExpired', 'credentialsExpireAt');
        }

        return array('__isInitialized__', 'id', 'displayname', 'messageboard', 'layers', 'compositions', 'styles', 'projects', 'palettes', '' . "\0" . 'OGIS\\IndexBundle\\Entity\\User' . "\0" . 'catalogs', 'messagesSent', 'messagesReceived', '' . "\0" . 'OGIS\\IndexBundle\\Entity\\User' . "\0" . 'limits', 'username', 'usernameCanonical', 'email', 'emailCanonical', 'enabled', 'salt', 'password', 'plainPassword', 'lastLogin', 'confirmationToken', 'passwordRequestedAt', 'groups', 'locked', 'expired', 'expiresAt', 'roles', 'credentialsExpired', 'credentialsExpireAt');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getLayers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLayers', array());

        return parent::getLayers();
    }

    /**
     * {@inheritDoc}
     */
    public function getCompositions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompositions', array());

        return parent::getCompositions();
    }

    /**
     * {@inheritDoc}
     */
    public function getStyles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStyles', array());

        return parent::getStyles();
    }

    /**
     * {@inheritDoc}
     */
    public function getCatalogs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCatalogs', array());

        return parent::getCatalogs();
    }

    /**
     * {@inheritDoc}
     */
    public function getProjects()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjects', array());

        return parent::getProjects();
    }

    /**
     * {@inheritDoc}
     */
    public function getPalettes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPalettes', array());

        return parent::getPalettes();
    }

    /**
     * {@inheritDoc}
     */
    public function getMessagesSent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessagesSent', array());

        return parent::getMessagesSent();
    }

    /**
     * {@inheritDoc}
     */
    public function getMessagesReceived()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessagesReceived', array());

        return parent::getMessagesReceived();
    }

    /**
     * {@inheritDoc}
     */
    public function setDisplayname($displayname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDisplayname', array($displayname));

        return parent::setDisplayname($displayname);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplayname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplayname', array());

        return parent::getDisplayname();
    }

    /**
     * {@inheritDoc}
     */
    public function addLayer(\OGIS\IndexBundle\Entity\Layer $layers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLayer', array($layers));

        return parent::addLayer($layers);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLayer(\OGIS\IndexBundle\Entity\Layer $layers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLayer', array($layers));

        return parent::removeLayer($layers);
    }

    /**
     * {@inheritDoc}
     */
    public function addComposition(\OGIS\IndexBundle\Entity\Composition $compositions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addComposition', array($compositions));

        return parent::addComposition($compositions);
    }

    /**
     * {@inheritDoc}
     */
    public function removeComposition(\OGIS\IndexBundle\Entity\Composition $compositions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeComposition', array($compositions));

        return parent::removeComposition($compositions);
    }

    /**
     * {@inheritDoc}
     */
    public function addStyle(\OGIS\IndexBundle\Entity\Style $styles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addStyle', array($styles));

        return parent::addStyle($styles);
    }

    /**
     * {@inheritDoc}
     */
    public function removeStyle(\OGIS\IndexBundle\Entity\Style $styles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeStyle', array($styles));

        return parent::removeStyle($styles);
    }

    /**
     * {@inheritDoc}
     */
    public function addProject(\OGIS\IndexBundle\Entity\ProjectParticipation $projects)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProject', array($projects));

        return parent::addProject($projects);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProject(\OGIS\IndexBundle\Entity\ProjectParticipation $projects)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProject', array($projects));

        return parent::removeProject($projects);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsersProjects()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsersProjects', array());

        return parent::getUsersProjects();
    }

    /**
     * {@inheritDoc}
     */
    public function addCatalog(\OGIS\IndexBundle\Entity\Catalog $catalogs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCatalog', array($catalogs));

        return parent::addCatalog($catalogs);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCatalog(\OGIS\IndexBundle\Entity\Catalog $catalogs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCatalog', array($catalogs));

        return parent::removeCatalog($catalogs);
    }

    /**
     * {@inheritDoc}
     */
    public function setLimits(\OGIS\IndexBundle\Entity\Role $limits = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLimits', array($limits));

        return parent::setLimits($limits);
    }

    /**
     * {@inheritDoc}
     */
    public function getLimits()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLimits', array());

        return parent::getLimits();
    }

    /**
     * {@inheritDoc}
     */
    public function addPalette(\OGIS\IndexBundle\Entity\Palette $palettes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPalette', array($palettes));

        return parent::addPalette($palettes);
    }

    /**
     * {@inheritDoc}
     */
    public function removePalette(\OGIS\IndexBundle\Entity\Palette $palettes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePalette', array($palettes));

        return parent::removePalette($palettes);
    }

    /**
     * {@inheritDoc}
     */
    public function setMessageboard($messageboard)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMessageboard', array($messageboard));

        return parent::setMessageboard($messageboard);
    }

    /**
     * {@inheritDoc}
     */
    public function getMessageboard()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessageboard', array());

        return parent::getMessageboard();
    }

    /**
     * {@inheritDoc}
     */
    public function addMessagesSent(\OGIS\IndexBundle\Entity\Message $messagesSent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMessagesSent', array($messagesSent));

        return parent::addMessagesSent($messagesSent);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMessagesSent(\OGIS\IndexBundle\Entity\Message $messagesSent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMessagesSent', array($messagesSent));

        return parent::removeMessagesSent($messagesSent);
    }

    /**
     * {@inheritDoc}
     */
    public function addMessagesReceived(\OGIS\IndexBundle\Entity\Message $messagesReceived)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMessagesReceived', array($messagesReceived));

        return parent::addMessagesReceived($messagesReceived);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMessagesReceived(\OGIS\IndexBundle\Entity\Message $messagesReceived)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMessagesReceived', array($messagesReceived));

        return parent::removeMessagesReceived($messagesReceived);
    }

    /**
     * {@inheritDoc}
     */
    public function addRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRole', array($role));

        return parent::addRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function serialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'serialize', array());

        return parent::serialize();
    }

    /**
     * {@inheritDoc}
     */
    public function unserialize($serialized)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unserialize', array($serialized));

        return parent::unserialize($serialized);
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', array());

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', array());

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsernameCanonical()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsernameCanonical', array());

        return parent::getUsernameCanonical();
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', array());

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailCanonical()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailCanonical', array());

        return parent::getEmailCanonical();
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', array());

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function getPlainPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlainPassword', array());

        return parent::getPlainPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function getLastLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastLogin', array());

        return parent::getLastLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function getConfirmationToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfirmationToken', array());

        return parent::getConfirmationToken();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', array());

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function hasRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasRole', array($role));

        return parent::hasRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonExpired', array());

        return parent::isAccountNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonLocked', array());

        return parent::isAccountNonLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function isCredentialsNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCredentialsNonExpired', array());

        return parent::isCredentialsNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isCredentialsExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCredentialsExpired', array());

        return parent::isCredentialsExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', array());

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function isExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isExpired', array());

        return parent::isExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isLocked', array());

        return parent::isLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function isSuperAdmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSuperAdmin', array());

        return parent::isSuperAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function removeRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRole', array($role));

        return parent::removeRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', array($username));

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function setUsernameCanonical($usernameCanonical)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsernameCanonical', array($usernameCanonical));

        return parent::setUsernameCanonical($usernameCanonical);
    }

    /**
     * {@inheritDoc}
     */
    public function setCredentialsExpireAt(\DateTime $date = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCredentialsExpireAt', array($date));

        return parent::setCredentialsExpireAt($date);
    }

    /**
     * {@inheritDoc}
     */
    public function setCredentialsExpired($boolean)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCredentialsExpired', array($boolean));

        return parent::setCredentialsExpired($boolean);
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailCanonical($emailCanonical)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailCanonical', array($emailCanonical));

        return parent::setEmailCanonical($emailCanonical);
    }

    /**
     * {@inheritDoc}
     */
    public function setEnabled($boolean)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnabled', array($boolean));

        return parent::setEnabled($boolean);
    }

    /**
     * {@inheritDoc}
     */
    public function setExpired($boolean)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpired', array($boolean));

        return parent::setExpired($boolean);
    }

    /**
     * {@inheritDoc}
     */
    public function setExpiresAt(\DateTime $date = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpiresAt', array($date));

        return parent::setExpiresAt($date);
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', array($password));

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function setSuperAdmin($boolean)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSuperAdmin', array($boolean));

        return parent::setSuperAdmin($boolean);
    }

    /**
     * {@inheritDoc}
     */
    public function setPlainPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlainPassword', array($password));

        return parent::setPlainPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function setLastLogin(\DateTime $time = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastLogin', array($time));

        return parent::setLastLogin($time);
    }

    /**
     * {@inheritDoc}
     */
    public function setLocked($boolean)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocked', array($boolean));

        return parent::setLocked($boolean);
    }

    /**
     * {@inheritDoc}
     */
    public function setConfirmationToken($confirmationToken)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfirmationToken', array($confirmationToken));

        return parent::setConfirmationToken($confirmationToken);
    }

    /**
     * {@inheritDoc}
     */
    public function setPasswordRequestedAt(\DateTime $date = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPasswordRequestedAt', array($date));

        return parent::setPasswordRequestedAt($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getPasswordRequestedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPasswordRequestedAt', array());

        return parent::getPasswordRequestedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function isPasswordRequestNonExpired($ttl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPasswordRequestNonExpired', array($ttl));

        return parent::isPasswordRequestNonExpired($ttl);
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles(array $roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', array($roles));

        return parent::setRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroups()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroups', array());

        return parent::getGroups();
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupNames()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupNames', array());

        return parent::getGroupNames();
    }

    /**
     * {@inheritDoc}
     */
    public function hasGroup($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasGroup', array($name));

        return parent::hasGroup($name);
    }

    /**
     * {@inheritDoc}
     */
    public function addGroup(\FOS\UserBundle\Model\GroupInterface $group)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addGroup', array($group));

        return parent::addGroup($group);
    }

    /**
     * {@inheritDoc}
     */
    public function removeGroup(\FOS\UserBundle\Model\GroupInterface $group)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeGroup', array($group));

        return parent::removeGroup($group);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

}
