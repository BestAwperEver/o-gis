<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevDebugProjectContainerUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevDebugProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\DefaultController::homePageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\AuthManagerController::loginFromSiteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/auth/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'validatelogin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\AuthManagerController::credentialsCheckForLoginAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/auth/login_validate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'showuser' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\UserController::showUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'userlist' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\UserController::userListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'userlistitems' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\UserController::userListItemsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/list/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'usernotes' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\UserController::editUserNotesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/user/notes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'usermessages' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\MessageController::GetMessagesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/messagebox',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'viewmessage' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\MessageController::ViewMessageAction',    'id' => NULL,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/message/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sendmessage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\MessageController::SendMessageAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/send/message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'markasread' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\MessageController::MarkAsReadAction',    'id' => NULL,  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/message/read',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'loadusercatalogs' => array (  0 =>   array (    0 => 'holderid',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\CatalogController::loadUserCatalogsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'holderid',    ),    1 =>     array (      0 => 'text',      1 => '/catalog/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'loaduserandglobalcatalogs' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\CatalogController::loadGlobalCatalogsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/catalog/globaltree',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'loadprojectcatalogs' => array (  0 =>   array (    0 => 'catid',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\CatalogController::loadProjectCatalogAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'catid',    ),    1 =>     array (      0 => 'text',      1 => '/catalog/project',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'loadcatalogdata' => array (  0 =>   array (    0 => 'catid',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\CatalogController::loadCatalogDataAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'catid',    ),    1 =>     array (      0 => 'text',      1 => '/catalog/data',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'loadcatalogdataeditor' => array (  0 =>   array (    0 => 'catid',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\CatalogController::loadCatalogDataEditorAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'catid',    ),    1 =>     array (      0 => 'text',      1 => '/catalog/layers',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'loadsubcatalogs' => array (  0 =>   array (    0 => 'catid',  ),  1 =>   array (    '_contorller' => 'OGISIndexBundle:Catalog:loadCatalogChildren',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'catid',    ),    1 =>     array (      0 => 'text',      1 => '/catalog/children',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'savecatalog' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\CatalogController::modifyCatalogAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/catalog/save',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'updatelink' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\CatalogController::modifyLinkAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/link/save',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deletecatalog' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\CatalogController::deleteCatalogAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/catalog/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'editcatalog' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\CatalogController::editCatalogAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/edit/catalog',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'editcatalog_save' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\CatalogController::updateCatalogAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/edit/catalog/save',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'updatecatalogacl' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\CatalogController::updateAclAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/edit/acl/catalog',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'movecatalogentity' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\CatalogController::changeParentAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/move/catalog',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'layerlist' => array (  0 =>   array (    0 => 'sortby',    1 => 'page',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\LayerController::showListAction',    'sortby' => 'modified',    'page' => 1,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sortby',    ),    2 =>     array (      0 => 'text',      1 => '/layers',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'showlayerlist' => array (  0 =>   array (    0 => 'group',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\LayerController::layerListForAddFunctionAction',    'group' => 'user',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'group',    ),    1 =>     array (      0 => 'text',      1 => '/list/layers',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'showrasterlist' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\LayerController::rasterListFunctionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/list/rasters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'showrasterlisteditor' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\LayerController::rasterListEditorFunctionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/list/rasters_editor',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'showlayer' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\LayerController::showLayerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/layer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'createlayer' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\LayerController::createLayerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/create/layer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'layer_upload' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\LayerController::uploadLayerAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/upload/layer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'upload_successful' => array (  0 =>   array (    0 => 'layername',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\LayerController::uploadCompleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'layername',    ),    1 =>     array (      0 => 'text',      1 => '/upload/complete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'upload_failed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\LayerController::uploadFailedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/upload/failed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'layerdlcounter' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\LayerController::updateDLCounterAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/dllayer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit_layer_properties' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\LayerController::editLayerPropertiesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/edit/layer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_layer_id' => array (  0 =>   array (    0 => 'cs',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\LayerController::findLayerByConStringAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cs',    ),    1 =>     array (      0 => 'text',      1 => '/find/layer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit_layer_properties_save' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\LayerController::saveLayerPropertiesAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/edit/layer/save',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deletelayerconfirm' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\LayerController::deleteLayerConfirmAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/deleteconfirm/layer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deletelayer' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\LayerController::deleteLayerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/deletelayer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deletelayersuccess' => array (  0 =>   array (    0 => 'layername',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\LayerController::deleteLayerSuccessAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'layername',    ),    1 =>     array (      0 => 'text',      1 => '/deletelayer/success',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'layerstylingoptions' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\CatalogController::stylingOptionsPageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/list/styling',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getLayerData' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\LayerController::getLayerDataAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/get/layer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'showcomposition' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\CompositionController::showCompositionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/composition',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getCompositionData' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\CompositionController::getCompositionDataAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/get/composition',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'saveComposition' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\CompositionController::saveCompositionAction',    'id' => NULL,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/savecomposition',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit_composition_properties' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\CompositionController::editCompositionPropertiesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/edit/composition',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit_composition_properties_save' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\CompositionController::saveCompositionPropertiesAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/edit/composition/save',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deletecompositionconfirm' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\CompositionController::deleteCompositionConfirmAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/deleteconfirm/composition',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deletecomposition' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\CompositionController::deleteCompositionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/deletecomposition',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deletecompositionsuccess' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\CompositionController::deleteCompositionSuccessAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/deletecomposition/success',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'altercompositionsharing' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\CompositionController::addProjectSharingAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/composition/project/alter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'removecompositionsharing' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\CompositionController::removeProjectSharingAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/composition/project/remove',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'showproject' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\ProjectController::showProjectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/project',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'createproject' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\ProjectController::createProjectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/create/project',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'generate_project' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\ProjectController::generateProjectAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/generate/project/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'generate_success' => array (  0 =>   array (    0 => 'projectid',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\ProjectController::generateProjectCompleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'projectid',    ),    1 =>     array (      0 => 'text',      1 => '/generate/success',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit_project_properties' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\ProjectController::editProjectPropertiesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/edit/project/properties',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit_project_properties_save' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\ProjectController::saveProjectPropertiesAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/project/properties/save',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_project_notes' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\ProjectController::editProjectNotesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/project/notes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edit_project_members' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\ProjectController::editProjectMembersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/edit/project/members',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_project_member' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\ProjectController::addProjectMembersAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/project/members/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'remove_project_member' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\ProjectController::removeProjectMembersAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/project/members/remove',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'change_member_rank' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\ProjectController::changeProjectMembersRankAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/project/members/changerank',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deleteprojectconfirmation' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\ProjectController::deleteProjectConfirmAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/deleteconfirm/project',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deleteproject' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\ProjectController::deleteProjectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/deleteproject',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deleteprojectdone' => array (  0 =>   array (    0 => 'projectname',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\ProjectController::deleteProjectSuccessAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'projectname',    ),    1 =>     array (      0 => 'text',      1 => '/deleteproject/success',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'wmsproxy' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\ProxyController::wmsProxyAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/wms',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'geoserverFunctionsProxy' => array (  0 =>   array (    0 => 'something',    1 => 'other',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\ProxyController::geoserverFunctionsProxyAction',    'other' => NULL,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'other',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'something',    ),    2 =>     array (      0 => 'text',      1 => '/geoserver',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'geoserverIdentifyForwarder' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\ProxyController::geoserverIdentifyForwarderAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/proxy',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'corsProxyAny' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\ProxyController::corsProxyAnyAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/anyproxy',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'showstyle' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\StyleController::showStyleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/style',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'stylelistpage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\StyleController::listStylesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/list/styles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'createstyle' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\StyleController::createStyleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/create/style',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'createstyleraster' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\StyleController::createRasterStyleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/create/style/raster',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'uploadstyle' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\StyleController::uploadStyleAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/upload/style',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getstylelist' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\StyleController::getStyleListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/get/styles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'applystyle' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\StyleController::applyStyleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/apply/style',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'applycustomvectorstyle' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\StyleController::applyCustomStyleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/apply/cstyle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deletestyle' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\StyleController::deleteStyleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/deletestyle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getpalettelist' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\PaletteController::listPalettesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/list/palettes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'showpalettelist' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\PaletteController::listPalettesEditorAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/palettes/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'showpalettelisteditor' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\PaletteController::listPalettesMainEditorAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/palettes/editorlist',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getpalette' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\PaletteController::getPaletteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/palette/get',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getpalettecompressed' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\PaletteController::getPaletteCompressedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/palette/cget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'savepalette' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\PaletteController::savePaletteAction',    'id' => NULL,  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/palette/save',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'showpalette' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\PaletteController::showPaletteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/palette',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'paletteeditor' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\PaletteController::paletteEditorAction',    'id' => NULL,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/paletteeditor',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deletepaletteconfirm' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\PaletteController::deletePaletteConfirmAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/deleteconfirm/palette',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deletepalette' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\PaletteController::deletePaletteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/deletepalette',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deletepalettesuccess' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\PaletteController::deletePaletteSuccessAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/deletepalette/success',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'updatepalettestyle' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\PaletteController::applyPaletteAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/apply/palette',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'geoexpl' => array (  0 =>   array (    0 => 'datasource',    1 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\EditorController::showEditorAction',    'datasource' => NULL,    'id' => NULL,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'datasource',    ),    2 =>     array (      0 => 'text',      1 => '/editor',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'getlayertype' => array (  0 =>   array (    0 => 'cs',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\LayerController::getLayerTypeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cs',    ),    1 =>     array (      0 => 'text',      1 => '/gettype/layer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'editorlogin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\AuthManagerController::loginFromEditorAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/auth/editor',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'compositioneditor' => array (  0 =>   array (    0 => 'datasource',    1 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\EditorController::showCompositionEditorAction',    'datasource' => NULL,    'id' => NULL,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'datasource',    ),    2 =>     array (      0 => 'text',      1 => '/ceditor',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'addtofavorites' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\CatalogController::addToFavoriteAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/favorites/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'removefromfavorites' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\CatalogController::removeFavoriteAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/favorites/remove',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'adminhome' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\DefaultController::adminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/home',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admingeoserver' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\AdminController::geoserverPageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/geoserver',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admingeoserverrestart' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\AdminController::geoserverRestartAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/restart/geoserver',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'adminnewslist' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\AdminController::newsListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/list/news',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admingetnews' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\AdminController::getNewsListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/get/news',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admineditnews' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\AdminController::editNewsAction',    'id' => NULL,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/edit/news',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'adminsavenews' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\AdminController::saveNewsAction',    'id' => NULL,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/save/news',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admindeletenews' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\AdminController::deleteNewsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/delete/news',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'migrateSystem' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\MigrateController::RestoreOGISAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/system/restore',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'createMany' => array (  0 =>   array (    0 => 'type',    1 => 'number',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\SetupController::createRolesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'number',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    2 =>     array (      0 => 'text',      1 => '/createentity',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'showuserrole' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\UserController::showUserRoleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/userrole',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'rasteropeations' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\RasterOperationsController::rasterOperationAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/rasterop',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'testrasteralgebra' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\RasterOperationsController::testRasterAlgeraAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/test/algebra',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'testalgebra' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'OGIS\\IndexBundle\\Controller\\RasterOperationsController::testAlgebraAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/operation/algebra',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::showAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::registerAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmedAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::requestAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::sendEmailAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::resetAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
